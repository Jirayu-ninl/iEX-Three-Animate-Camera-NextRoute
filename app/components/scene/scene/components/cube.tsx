/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 cube.glb --transform --simplify -ts
*/

import { DoubleSide } from 'three'

import React from 'react'
import { useGLTF, Edges } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube002_Cube005: THREE.Mesh
    Cube003_Cube006: THREE.Mesh
  }
  materials: {
    Tess: THREE.MeshStandardMaterial
    cube: THREE.MeshStandardMaterial
  }
}

export default function Model(
  props: JSX.IntrinsicElements['group'] & { _dark?: boolean }
) {
  const { nodes, materials } = useGLTF(
    '/models/cubeOnly.glb'
  ) as GLTFResult

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002_Cube005.geometry}
        scale={0.5}
      >
        {/* <meshStandardMaterial {...materials.Tess} /> */}
        <meshBasicMaterial transparent opacity={0} />
        <Edges scale={1}>
          <lineBasicMaterial color={[1.4, 1.1, 0]} toneMapped={false} />
        </Edges>
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003_Cube006.geometry}
        scale={0.5}
      >
        {/* <boxBufferGeometry args={[1, 1, 1]} scale={2} /> */}
        <meshStandardMaterial
          {...materials.cube}
          emissiveIntensity={5}
          depthTest={false}
          roughness={1}
          metalness={0}
          toneMapped={false}
          // side={DoubleSide}
          // toneMapped={false}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/three/scene/home/cubeOnly.glb')
